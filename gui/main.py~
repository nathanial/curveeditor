import sys, os, random
from plots import Plotter
from helpers import read_lasfile
from PyQt4 import QtGui, QtCore
from PyQt4.QtGui import QMainWindow, QMenu, QWidget, QVBoxLayout, QApplication, QMessageBox
from numpy import arange, sin, pi
from matplotlib.backends.backend_qt4agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.figure import Figure

progname = os.path.basename(sys.argv[0])
progversion = "0.1"

class ApplicationWindow(QMainWindow):
    def __init__(self):
        QMainWindow.__init__(self)
        self.setAttribute(QtCore.Qt.WA_DeleteOnClose)
        self.setWindowTitle("application main window")
        
        self.file_menu = QMenu('&File', self)
        self.file_menu.addAction('&Quit', self.fileQuit,
                                 QtCore.Qt.CTRL + QtCore.Qt.Key_Q)
        self.menuBar().addMenu(self.file_menu)
        
        self.help_menu = QMenu('&Help', self)
        self.menuBar().addSeparator()
        self.menuBar().addMenu(self.help_menu)
        
        self.help_menu.addAction('&About', self.about)
        
        self.main_widget = QWidget(self)
        
        l = QVBoxLayout(self.main_widget)

        lf = read_lasfile("/home/nathan/projects/CurveEditor/test.las")
        
        p1 = Plotter(lf.gamma_list, lf.depth_list, 
                     self.main_widget, width=5, 
                     height=4, dpi=100).fig
#        p2 = Plotter(lf.gamma_list, lf.depth_list,
 #                    self.main_widget, width=5,
  #                   height=4, dpi=100)

        l.addWidget(p1)
   #     l.addWidget(p2)

        self.main_widget.setFocus()
        self.setCentralWidget(self.main_widget)
        
        self.statusBar().showMessage("All hail matplotlib!", 2000)

    def fileQuit(self):
        self.close()
        
    def closeEvent(self, ce):
        self.fileQuit()

    def about(self):
        QMessageBox.about(self, "About %s" % progname,
                                u"""%(prog)s version %(version)s
Copyright \N{COPYRIGHT SIGN} 2005 Florent Rougon, 2006 Darren Dale

This program is a simple example of a Qt4 application embedding matplotlib
canvases.

It may be used and modified with no restriction; raw copies as well as
modified versions may be distributed without limitation."""
                                % {"prog": progname, "version": progversion})

qApp = QApplication(sys.argv)

aw = ApplicationWindow()
aw.setWindowTitle("%s" % progname)
aw.show()
sys.exit(qApp.exec_())
